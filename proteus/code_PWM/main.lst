CCS PCH C Compiler, Version 4.140, 28366               15-Apr-15 01:04

               Filename:   C:\Users\khadinh\Desktop\PWM_robot\main.lst

               ROM used:   1644 bytes (5%)
                           Largest free fragment is 31120
               RAM used:   35 (2%) at main() level
                           62 (4%) worst case
               Stack:     3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   0596
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   039A
0060:  BTFSS  FF0.3
0062:  GOTO   006C
0066:  BTFSC  FF0.0
0068:  GOTO   03FC
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <main.h> 
.................... #include <18F4520.h> 
.................... //////// Standard Header file for the PIC18F4520 device //////////////// 
.................... #device PIC18F4520 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(clock=12000000) 
....................  
....................  
....................  
.................... float x=0.1; 
.................... int16 value; 
.................... #int_EXT 
.................... void  tang(void)  
.................... { 
....................   x=x+0.1; 
*
039A:  BCF    FD8.1
039C:  MOVFF  1C,31
03A0:  MOVFF  1B,30
03A4:  MOVFF  1A,2F
03A8:  MOVFF  19,2E
03AC:  MOVLW  CD
03AE:  MOVWF  35
03B0:  MOVLW  CC
03B2:  MOVWF  34
03B4:  MOVLW  4C
03B6:  MOVWF  33
03B8:  MOVLW  7B
03BA:  MOVWF  32
03BC:  RCALL  00BA
03BE:  MOVFF  03,1C
03C2:  MOVFF  02,1B
03C6:  MOVFF  01,1A
03CA:  MOVFF  00,19
....................   if(x>1) x=1; 
03CE:  CLRF   31
03D0:  CLRF   30
03D2:  CLRF   2F
03D4:  MOVLW  7F
03D6:  MOVWF  2E
03D8:  MOVFF  1C,35
03DC:  MOVFF  1B,34
03E0:  MOVFF  1A,33
03E4:  MOVFF  19,32
03E8:  RCALL  0324
03EA:  BNC   03F6
03EC:  CLRF   1C
03EE:  CLRF   1B
03F0:  CLRF   1A
03F2:  MOVLW  7F
03F4:  MOVWF  19
.................... } 
....................  
03F6:  BCF    FF2.1
03F8:  GOTO   006C
.................... #int_EXT1 
.................... void  giam(void)  
.................... { 
....................   x=x-0.1; 
03FC:  BSF    FD8.1
03FE:  MOVFF  1C,31
0402:  MOVFF  1B,30
0406:  MOVFF  1A,2F
040A:  MOVFF  19,2E
040E:  MOVLW  CD
0410:  MOVWF  35
0412:  MOVLW  CC
0414:  MOVWF  34
0416:  MOVLW  4C
0418:  MOVWF  33
041A:  MOVLW  7B
041C:  MOVWF  32
041E:  RCALL  00BA
0420:  MOVFF  03,1C
0424:  MOVFF  02,1B
0428:  MOVFF  01,1A
042C:  MOVFF  00,19
....................   if(x<0.1) x=0.1; 
0430:  MOVFF  1C,31
0434:  MOVFF  1B,30
0438:  MOVFF  1A,2F
043C:  MOVFF  19,2E
0440:  MOVLW  CD
0442:  MOVWF  35
0444:  MOVLW  CC
0446:  MOVWF  34
0448:  MOVLW  4C
044A:  MOVWF  33
044C:  MOVLW  7B
044E:  MOVWF  32
0450:  RCALL  0324
0452:  BNC   0464
0454:  MOVLW  CD
0456:  MOVWF  1C
0458:  MOVLW  CC
045A:  MOVWF  1B
045C:  MOVLW  4C
045E:  MOVWF  1A
0460:  MOVLW  7B
0462:  MOVWF  19
.................... } 
....................  
....................  
....................  
....................  
....................     
....................    
....................  
....................  
0464:  BCF    FF0.0
0466:  GOTO   006C
.................... void main() 
.................... {  enable_interrupts(GLOBAL); 
*
0596:  CLRF   FF8
0598:  BCF    FD0.7
059A:  BSF    07.7
059C:  CLRF   FEA
059E:  CLRF   FE9
05A0:  MOVLW  CD
05A2:  MOVWF  1C
05A4:  MOVLW  CC
05A6:  MOVWF  1B
05A8:  MOVLW  4C
05AA:  MOVWF  1A
05AC:  MOVLW  7B
05AE:  MOVWF  19
05B0:  MOVF   FC1,W
05B2:  ANDLW  C0
05B4:  IORLW  0F
05B6:  MOVWF  FC1
05B8:  MOVLW  07
05BA:  MOVWF  FB4
05BC:  MOVLW  C0
05BE:  IORWF  FF2,F
....................    enable_interrupts(INT_EXT); 
05C0:  BSF    FF2.4
....................    enable_interrupts(INT_EXT1); 
05C2:  BSF    FF0.3
....................    enable_interrupts( INT_EXT_L2H ); 
05C4:  BSF    FF2.4
05C6:  BSF    FF1.6
....................    enable_interrupts( INT_EXT1_L2H ); 
05C8:  BSF    FF0.3
05CA:  BSF    FF1.5
....................    setup_timer_2(T2_DIV_BY_4,74,1);      //100 us overflow, 100 us interrupt 
05CC:  MOVLW  00
05CE:  IORLW  05
05D0:  MOVWF  FCA
05D2:  MOVLW  4A
05D4:  MOVWF  FCB
....................    setup_ccp1(CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L); 
05D6:  BCF    F94.2
05D8:  BCF    F8B.2
05DA:  MOVLW  0C
05DC:  MOVWF  FBD
05DE:  CLRF   FB7
05E0:  CLRF   FB6
....................     
....................    /* duty cycle(x)= value/[4*(PR2+1)] trong do duty la phan tram PWM 
....................                                                      value la gia tri dua vao  
....................                                                      PR2 lay tu timer 2 ben tren */ 
....................     
....................     
....................  
....................    while(TRUE) 
....................    {  value=x*4*75; 
05E2:  MOVFF  1C,26
05E6:  MOVFF  1B,25
05EA:  MOVFF  1A,24
05EE:  MOVFF  19,23
05F2:  CLRF   2A
05F4:  CLRF   29
05F6:  CLRF   28
05F8:  MOVLW  81
05FA:  MOVWF  27
05FC:  RCALL  046A
05FE:  MOVFF  00,1F
0602:  MOVFF  01,20
0606:  MOVFF  02,21
060A:  MOVFF  03,22
060E:  MOVFF  03,26
0612:  MOVFF  02,25
0616:  MOVFF  01,24
061A:  MOVFF  00,23
061E:  CLRF   2A
0620:  CLRF   29
0622:  MOVLW  16
0624:  MOVWF  28
0626:  MOVLW  85
0628:  MOVWF  27
062A:  RCALL  046A
062C:  MOVFF  03,22
0630:  MOVFF  02,21
0634:  MOVFF  01,20
0638:  MOVFF  00,1F
063C:  BRA    055C
063E:  MOVFF  02,1E
0642:  MOVFF  01,1D
....................       set_pwm1_duty(value); 
0646:  MOVFF  1E,02
064A:  MOVFF  1D,01
064E:  RRCF   02,F
0650:  RRCF   01,F
0652:  RRCF   02,F
0654:  RRCF   01,F
0656:  RRCF   02,F
0658:  MOVFF  01,FBE
065C:  RRCF   02,F
065E:  RRCF   02,W
0660:  ANDLW  30
0662:  MOVWF  00
0664:  MOVF   FBD,W
0666:  ANDLW  CF
0668:  IORWF  00,W
066A:  MOVWF  FBD
....................    } 
066C:  BRA    05E2
....................  
.................... } 
066E:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 0E18   PUT NOBROWNOUT BORV21 NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
